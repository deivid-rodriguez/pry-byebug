---

version: 2.1

executors:
  test:
    parameters:
      version:
        type: string

    docker:
      - image: ruby:<< parameters.version >>

jobs:
  spec:
    parameters:
      executor:
        type: executor

    executor: << parameters.executor >>

    steps:
      - checkout

      - restore_cache:
          keys:
            - dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Install dependencies
          command: |
            gem install bundler -v 2.1.4
            bundle install --jobs 3 --retry 3 --path .bundle

      - run:
          name: Run tests
          command: |
            RUBYOPT="-E UTF-8" bundle exec rake

      - attach_workspace:
          at: coverage

      - attach_workspace:
          at: /usr/local/bin

      - run:
          name: Save coverage
          command: |
            cc-test-reporter format-coverage --output coverage/codeclimate.$CIRCLE_JOB.json

      - persist_to_workspace:
          root: coverage
          paths:
            - codeclimate.*.json

      - save_cache:
          key: dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - .bundle

  setup_coverage:
    docker:
      - image: ruby:2.6.0

    working_directory: /usr/local/bin

    steps:
      - run:
          name: Download test coverage reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-0.6.4-linux-amd64 > cc-test-reporter

      - run:
          name: Give test coverage reporter executable permissions
          command: |
            chmod +x cc-test-reporter

      - persist_to_workspace:
          root: /usr/local/bin
          paths:
            - cc-test-reporter

  upload_coverage:
    docker:
      - image: ruby:2.7.0
        environment:
          - CC_TEST_REPORTER_ID: f06a22b27a507a3054eb69873c9e3bbc9ef97476d6ef22eec8cd24686494cb2b

    steps:
      - attach_workspace:
          at: coverage

      - attach_workspace:
          at: /usr/local/bin

      - run:
          name: Aggregate coverage results
          command: |
            cc-test-reporter sum-coverage coverage/codeclimate.*.json

      - run:
          name: Upload coverage results to codeclimate
          command: |
            cc-test-reporter upload-coverage

workflows:
  version: 2

  test:
    jobs:
      - setup_coverage

      - spec:
          name: "2.3"

          executor:
            name: test
            version: 2.3.8

          requires:
            - setup_coverage

      - spec:
          name: "2.4"

          executor:
            name: test
            version: 2.4.5

          requires:
            - setup_coverage

      - spec:
          name: "2.5"

          executor:
            name: test
            version: 2.5.3

          requires:
            - setup_coverage

      - spec:
          name: "2.6"

          executor:
            name: test
            version: 2.6.0

          requires:
            - setup_coverage

      - spec:
          name: "2.7"

          executor:
            name: test
            version: 2.7.0

          requires:
            - setup_coverage

      - upload_coverage:
          requires:
            - "2.3"
            - "2.4"
            - "2.5"
            - "2.6"
            - "2.7"
